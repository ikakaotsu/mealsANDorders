version: "3.7"
services:
  mongodb:
    container_name: mongo-container
    image: mongo:4.2.0
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_ROOT_DATABASE: root-db

    volumes:
      - ./docker-entrypoint-initdb.d/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - express-mongo
  frontend:
    container_name: frontend
    image: ikakaotsu/mealsandorders_frontend
    #build: frontend
    ports:
      - 8080:8080
    stdin_open: true
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    container_name: frontend
    restart: always
    networks:
      - http_server
    depends_on:
      - backend
  backend:
    container_name: backend
    image: ikakaotsu/mealsandorders_backend
    restart: always
    #build: backend
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - mongodb
    networks:
      - express-mongo
      - http_server
    #expose:
    ports:
      - 3000:3000
  #mongo-express:
  #image: mongo-express
  #container_name: mongo-express
  #environment:
  #- ME_CONFIG_MONGODB_SERVER=mongodb
  #- ME_CONFIG_MONGODB_ENABLE_ADMIN=true
  #- ME_CONFIG_MONGODB_ADMINUSERNAME=root
  #- ME_CONFIG_MONGODB_ADMINPASSWORD=password
  #- ME_CONFIG_BASICAUTH_USERNAME=admin
  #- ME_CONFIG_BASICAUTH_PASSWORD=password
  #volumes:
  #- ./docker-entrypoint-initdb.d
  #depends_on:
  #- mongodb
  #networks:
  #- express-mongo
  #ports:
  #- 8081:8081
  #healthcheck:
  #test: wget --quiet --tries=3 --spider http://admin:admin123@10.10.10.60:8081 || exit 1
  #interval: 30s
  #timeout: 10s
  #retries: 3
  #restart: unless-stopped

  #volumes:
  #mongodb-data:
networks:
  http_server:
  express-mongo:
